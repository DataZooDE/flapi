name: Build flAPI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  linux-amd64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Linux Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build make gcc-multilib g++-multilib libssl-dev wget zip unixodbc-dev libc6-dev-i386 lib32readline6-dev libssl-dev libcurl4-gnutls-dev libexpat1-dev gettext unzip build-essential checkinstall libffi-dev curl libz-dev openssh-client pkg-config

    - name: Build
      run: |
        make release
        mkdir -p build/release
        cp build/release/flapi build/release/
        chmod +x build/release/flapi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: flapi-linux-amd64
        path: build/release/flapi
        if-no-files-found: error
        retention-days: 90

  linux-aarch64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Linux Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build make gcc-multilib g++-multilib libssl-dev wget zip unixodbc-dev libc6-dev-i386 lib32readline6-dev libssl-dev libcurl4-gnutls-dev libexpat1-dev gettext unzip build-essential checkinstall libffi-dev curl libz-dev openssh-client pkg-config

    - name: Build
      run: |
        sudo apt-get update
        sudo apt-get install -y crossbuild-essential-arm64 gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

    - name: Build
      run: |
        CC=aarch64-linux-gnu-gcc CXX=aarch64-linux-gnu-g++ make release
        mkdir -p build/release
        cp build/release/flapi build/release/
        chmod +x build/release/flapi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: flapi-linux-arm64
        path: build/release/flapi
        if-no-files-found: error
        retention-days: 90

  osx-universal:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Build
      run: |
        make release
        mkdir -p build/release
        cp build/universal/flapi build/release/
        chmod +x build/release/flapi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: flapi-macos-universal
        path: build/release/flapi
        if-no-files-found: error
        retention-days: 90

  docker:
    needs: [linux-amd64, linux-aarch64]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Prepare build context
      run: |
        mkdir -p build/release
        cp artifacts/flapi-linux-amd64/flapi build/release/flapi.amd64
        cp artifacts/flapi-linux-arm64/flapi build/release/flapi.arm64
        chmod +x build/release/flapi.*

    - name: Build and push multi-platform Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/flapi:latest
          ghcr.io/${{ github.repository_owner }}/flapi:${{ github.sha }}
