name: Build flAPI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: amd64
            platform: linux/amd64
          - os: ubuntu-latest
            arch: arm64
            platform: linux/arm64
          - os: macos-latest
            arch: universal
            platform: darwin

    runs-on: ${{ matrix.runner || matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up QEMU
      if: runner.os == 'Linux'
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      if: runner.os == 'Linux'
      uses: docker/setup-buildx-action@v3

    - name: Build in Docker (Linux)
      if: runner.os == 'Linux'
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile.build
        platforms: ${{ matrix.platform }}
        outputs: type=local,dest=build
        target: builder
        push: false

    - name: Prepare Linux artifacts
      if: runner.os == 'Linux'
      run: |
        mkdir -p build/release
        if [ "${{ matrix.arch }}" = "amd64" ]; then
          find build -name flapi -type f -exec cp {} build/release/ \;
        else
          find build -name flapi -type f -exec cp {} build/release/ \;
        fi
        chmod +x build/release/flapi

    - name: Build Release (macOS)
      if: runner.os == 'macOS'
      run: |
        make release
        mkdir -p build/release
        cp build/universal/flapi build/release/
        chmod +x build/release/flapi

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: flapi-${{ matrix.os }}-${{ matrix.arch }}
        path: build/release/flapi
        if-no-files-found: error
        retention-days: 90

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Prepare build context
      run: |
        mkdir -p build/release
        cp artifacts/flapi-ubuntu-latest-amd64/flapi build/release/flapi.amd64
        cp artifacts/flapi-ubuntu-latest-arm64/flapi build/release/flapi.arm64
        chmod +x build/release/flapi.*

    - name: Build and push multi-platform Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/flapi:latest
          ghcr.io/${{ github.repository_owner }}/flapi:${{ github.sha }}
