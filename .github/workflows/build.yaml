name: Build flAPI

permissions: 
  contents: read
  packages: write
  issues: write
  pull-requests: write

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # -------------------------------------------------------------------------------------------------
  # Linux AMD64
  # -------------------------------------------------------------------------------------------------
  linux-amd64:
    runs-on: ubuntu-latest
    env:
      BUILD_ARCH: amd64
      BUILD_IMAGE: flapi_build_amd64
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup Ccache
      uses: hendrikmuhs/ccache-action@main
      with:
        key: ${{ github.job }}
        save: ${{ github.ref == 'refs/heads/main' || github.repository != 'datazoode/flapi' }}

    - name: Build Docker image
      shell: bash
      run: |
        docker build \
          -t ${BUILD_IMAGE} \
          -f /`pwd`/.github/docker/linux_${BUILD_ARCH}/Dockerfile .

    - name: Run build in docker
      shell: bash
      run: |
        docker run \
          -v `pwd`:/build_dir \
          -v ~/.ccache:/ccache_dir \
          ${BUILD_IMAGE} \
          bash -c 'make clean && make release'

    - uses: actions/upload-artifact@v4
      with:
        name: flapi-linux-${{ env.BUILD_ARCH }}
        path: build/release/flapi
        if-no-files-found: error

  # -------------------------------------------------------------------------------------------------
  # Linux ARM64
  # -------------------------------------------------------------------------------------------------
  linux-aarch64:
    runs-on: ubuntu-latest
    env:
      FLAPI_CROSS_COMPILE: arm64
      BUILD_ARCH: arm64
      BUILD_IMAGE: flapi_build_arm64
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup Ccache
      uses: hendrikmuhs/ccache-action@main
      with:
        key: ${{ github.job }}
        save: ${{ github.ref == 'refs/heads/main' || github.repository != 'datazoode/flapi' }}

    - name: Build Docker image
      shell: bash
      run: |
        docker build \
          -t ${BUILD_IMAGE} \
          -f /`pwd`/.github/docker/linux_${BUILD_ARCH}/Dockerfile .

    - name: Run build in docker
      shell: bash
      run: |
        docker run \
          -e FLAPI_CROSS_COMPILE="${BUILD_ARCH}" \
          -v `pwd`:/build_dir \
          -v ~/.ccache:/ccache_dir \
          ${BUILD_IMAGE} \
          bash -c 'make clean && make release'

    - uses: actions/upload-artifact@v4
      with:
        name: flapi-linux-${{ env.BUILD_ARCH }}
        path: build/release/flapi
        if-no-files-found: error

  # -------------------------------------------------------------------------------------------------
  # Docker
  # -------------------------------------------------------------------------------------------------
  docker-build:
      needs: [linux-amd64, linux-aarch64]
      runs-on: ubuntu-latest
      if: github.event_name == 'push'
  
      strategy:
        matrix:
          platform: [linux/amd64, linux/arm64]
      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        run: |
          echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV 
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV 

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.REPO_OWNER }}/flapi
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=sha,format=long
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
  
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false
  
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
  
      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-contexts: |
            build=./artifacts/flapi-linux-${{ endsWith(matrix.platform, 'amd64') && 'amd64' || 'arm64' }}
          outputs: type=image,"name=ghcr.io/${{ env.REPO_OWNER }}/flapi",push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  docker-merge:
    needs: [docker-build]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.REPO_OWNER }}/flapi
          tags: | 
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=sha,format=long

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ghcr.io/${{ env.REPO_OWNER }}/flapi@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ghcr.io/${{ env.REPO_OWNER }}/flapi:${{ steps.meta.outputs.version }}


  # -------------------------------------------------------------------------------------------------
  # macOS Universal
  # -------------------------------------------------------------------------------------------------
  osx-universal:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Ccache
      uses: hendrikmuhs/ccache-action@main
      with:
        key: ${{ github.job }}
        save: ${{ github.ref == 'refs/heads/main' || github.repository != 'datazoode/flapi' }}  

    - name: Install ninja
      shell: bash
      run: brew install ninja autoconf make libtool pkg-config automake autoconf-archive

    - name: Build
      run: make release

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: flapi-macos-universal
        path: build/universal/flapi
        if-no-files-found: error
        retention-days: 90